?read.csv()
setwd("~/Desktop/Class_Folder/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript")
install.packages("dplyr")
library(package)
library(jsonlite)
?fromJSON()
mechaCar_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
mechaCar_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
save.image("~/Desktop/Class_Folder/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript/challenge_code.RData")
View(mechaCar_table)
> lm(vehicle_lengh ~ vehicle_weight + spoiler_angle + ground_clearance + AWD + mpg ,mechaCar) #create linear model
lm(vehicle_lengh ~ vehicle_weight + spoiler_angle + ground_clearance + AWD + mpg ,mechaCar) #create linear model
lm(vehicle_lengh ~ vehicle_weight + spoiler_angle + ground_clearance + AWD + mpg ,mechaCar_table) #create linear model
lm(vehicle_length ~ vehicle_weight + spoiler_angle + ground_clearance + AWD + mpg ,mechaCar_table) #create linear model
save.image("~/Desktop/Class_Folder/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript/challenge_code.RData")
linear_table <- lm(vehicle_length ~ vehicle_weight + spoiler_angle + ground_clearance + AWD + mpg ,mechaCar_table) #create linear model
summary_table <- summary(linear_table)
View(summary_table)
View(summary_table)
save.image("~/Desktop/Class_Folder/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript/challenge_code.RData")
suspension_Coil_table <- read.csv(file='MSuspension_Coil.csv',check.names=F,stringsAsFactors = F)
suspension_Coil_table <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F)
View(suspension_Coil_table)
View(suspension_Coil_table)
total_summary <- suspension_Coil_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean_Mileage=mean(PSI), .groups = 'keep') #create summary table with multiple columns
install.packages("magrittr")
install.packages("magrittr")
install.packages("dplyr")
library(magrittr)
library(dplyr)
total_summary <- suspension_Coil_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean_Mileage=mean(PSI), .groups = 'keep') #create summary table with multiple columns
View(total_summary)
save.image("~/Desktop/Class_Folder/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript/challenge_code.RData")
View(total_summary)
total_summary <- suspension_Coil_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Var=var(PSI),Std_Dev=sd(PSI),Num_Coil=n(), .groups = 'keep')) #create summary table with multiple columns
total_summary <- suspension_Coil_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median=median(PSI),Var=var(PSI),Std_Dev=sd(PSI),Num_Coil=n(), .groups = 'keep') #create summary table with multiple columns
total_summary <- suspension_Coil_table %>% summarize(Mean_PSI=mean(PSI),Median=median(PSI),Var=var(PSI),Std_Dev=sd(PSI),Num_Coil=n(), .groups = 'keep') #create summary table with multiple columns
lot_summary <- suspension_Coil_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median=median(PSI),Var=var(PSI),Std_Dev=sd(PSI),Num_Coil=n(), .groups = 'keep') #create summary table with multiple columns
View(lot_summary)
View(lot_summary)
save.image("~/Desktop/Class_Folder/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript/challenge_code.RData")
View(linear_table)
View(linear_table)
View(mechaCar_table)
View(mechaCar_table)
View(summary_table)
View(suspension_Coil_table)
View(total_summary)
#box plot: PSI Whole lot
plt1 <- ggplot(suspension_Coil_table,aes(y=PSI)) #import dataset into ggplot2
library(ggplot2)
plt1 <- ggplot(suspension_Coil_table,aes(y=PSI)) #import dataset into ggplot2
plt1 + geom_boxplot() #add boxplot
plt2 <- ggplot(suspension_Coil_table,aes(x=Manufacturing_Lot,y=PSI)) #import dataset into ggplot2
plt2 + geom_boxplot()
t.test(suspension_Coil_table$PSI,mu=1500) #compare sample versus population means
#2. Use t.test() function 3 more times with subset() to determine if PSI for each manufacturing lot is statistically different from the pop. mean of 1,500 PSI
lot1 <- subset(mecha_coil, Manufacturing_Lot=="Lot1")
#2. Use t.test() function 3 more times with subset() to determine if PSI for each manufacturing lot is statistically different from the pop. mean of 1,500 PSI
lot1 <- subset(suspension_Coil_table, Manufacturing_Lot=="Lot1")
lot2 <- subset(suspension_Coil_table, Manufacturing_Lot=="Lot2")
lot3 <- subset(suspension_Coil_table), Manufacturing_Lot=="Lot3")
#2. Use t.test() function 3 more times with subset() to determine if PSI for each manufacturing lot is statistically different from the pop. mean of 1,500 PSI
> lot1 <- subset(suspension_Coil_table, Manufacturing_Lot=="Lot1")
#2. Use t.test() function 3 more times with subset() to determine if PSI for each manufacturing lot is statistically different from the pop. mean of 1,500 PSI
> lot1 <- subset(suspension_Coil_table, Manufacturing_Lot=="Lot1")
#2. Use t.test() function 3 more times with subset() to determine if PSI for each manufacturing lot is statistically different from the pop. mean of 1,500 PSI
> lot1 <- subset(suspension_Coil_table, Manufacturing_Lot=="Lot1")
#2. Use t.test() function 3 more times with subset() to determine if PSI for each manufacturing lot is statistically different from the pop. mean of 1,500 PSI lot1 <- subset(suspension_Coil_table, Manufacturing_Lot=="Lot1") lot2 <- subset(suspension_Coil_table, Manufacturing_Lot=="Lot2") lot3 <- subset(suspension_Coil_table), Manufacturing_Lot=="Lot3")
t.test(lot1$PSI,mu=1500)
t.test(lot2$PSI,mu=1500)
t.test(lot3$PSI,mu=1500)
lot3 <- subset(suspension_Coil_table), Manufacturing_Lot=="Lot3")
View(lot_summary)
View(lot_summary)
lot3 <- subset(suspension_Coil_table, Manufacturing_Lot=="Lot3")
t.test(lot3$PSI,mu=1500)
View(plt1)
save.image("~/Desktop/Class_Folder/MechaCar_Statistical_Analysis/MechaCarChallenge.RScript/challenge_code.RData")
View(total_summary)
View(total_summary)
View(summary_table)
View(summary_table)
summary(lm(mpg ~ vehicle_weight + ground_clearance + mpg ,mechaCar_table))
